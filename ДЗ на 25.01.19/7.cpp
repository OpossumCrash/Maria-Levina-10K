/*7) У исполнителя Множик есть три команды:
1. умножь на 8,
2. подели на 2,
3. умножь на 4
Напишите программу, которая находит, сколько различных чисел может получить
исполнитель из числа X программами, состоящими ровно из N команд. Вторая
команда выполняется, только если ей подается четное число (в противном случае
программа завершается аварийно).*/
/*
Моя программа реализована так, что вторая команда  работает только для четных промежуточных и исходных
значений, т.е если исходное число при делении на 2 дает нечетное промежуточное значение,
то дальше команда работает только с другими четными промежуточными значениями.
Например, при X = 6 и N = 2 будет выведено число 5.*/
/*
#include <iostream>

using namespace std;

int step(int b, int c){
 int temp = b;
 for(int i = 0; i < (c - 1); i++){
    temp = temp*b;
 };
 return temp;
}

void vstavka(int* A, int x, int a){
  A[x / 2] = a;
  A[x * 8] = a;
  A[x * 4] = a;

return;
}

int main() {
int X;
int N;
cout << "X = "; cin >> X;
cout << "N = "; cin >> N;
int result = 0;

int* chis = new int [X * step(2, N)];

if(((X % 2) != 0) || (N == 0)){         //аварийное завершение
  result = 0;
  cout << result;
  return 0;
}
    chis[X * 8] = 1;
    chis[X / 2] = 1;
    chis[X * 4] = 1;

for(int i = 2; i <= N; i++){
    for(int o = 0; o <= (X * step(2, N)); o += 2){
        if (chis[o] >= (i - 1)){
           vstavka(chis, o, i);
        };
    };
};
for(int a = 0; a < (X * step(2, N)); a++){
    if(chis[a] == N) result++;
    };
cout << result;

return 0;
}
*/
