/*7) ” исполнител€ ћножик есть три команды:
1. умножь на 8,
2. подели на 2,
3. умножь на 4
Ќапишите программу, котора€ находит, сколько различных чисел может получить
исполнитель из числа X программами, состо€щими ровно из N команд. ¬тора€
команда выполн€етс€, только если ей подаетс€ четное число (в противном случае
программа завершаетс€ аварийно).*/
/*
ћо€ программа реализована так, что втора€ команда  работает только дл€ четных промежуточных значений, т.е
если исходное число при делении на 2 дает нечетное промежуточное значение, то дальше команда работает
только с другими четными промежуточными значени€ми. Ќапример, при X = 6 и N = 2 будет выведено число 5*/

#include <iostream>

using namespace std;

void vstavka(int* A, int x, int a){
  A[x / 2] = a;
  A[x * 8] = a;
  A[x * 4] = a;

return;
}

int main() {
int X;
int N;
cout << "X = "; cin >> X;
cout << "N = "; cin >> N;
int result = 0;

int* chis = new int [8 * N];

if(((X % 2) != 0) || (N == 0)){         //аварийное завершение
  result = 0;
  cout << result;
  return 0;
}
    chis[X * 8] = 1; cout << X * 8 << endl;
    chis[X / 2] = 1; cout << X / 2 << endl;
    chis[X * 4] = 1; cout << X * 4 << endl;

for(int i = 2; i <= N; i++){
    for(int o = 0; o <= (8 * i); o += 2){
        if (chis[o] >= (i - 1)){
           vstavka(chis, o, i);
        };
    };
};
for(int a = 0; a < (N * 8); a++){
    if(chis[a] == N) result++;
    };
cout << result;

return 0;
}
